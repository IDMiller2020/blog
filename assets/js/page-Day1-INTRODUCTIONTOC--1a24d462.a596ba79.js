(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{471:function(e,t,a){"use strict";a.r(t);var r=a(2),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-1-introduction-to-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-1-introduction-to-c"}},[e._v("#")]),e._v(" Day 1 - INTRODUCTION TO C#:")]),e._v(" "),a("h2",{attrs:{id:"daily-challenge-morning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-challenge-morning"}},[e._v("#")]),e._v(" Daily Challenge - Morning:")]),e._v(" "),a("p",[a("em",[e._v("Sprint Planning")]),e._v(" "),a("br"),e._v(" "),a("br")]),e._v(" "),a("h2",{attrs:{id:"daily-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-project"}},[e._v("#")]),e._v(" Daily Project:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/IDMiller2020/spring21-csday1",target:"_blank",rel:"noopener noreferrer"}},[e._v("CS Day1 Lecture"),a("OutboundLink")],1),e._v(" "),a("br"),e._v(" "),a("br")]),e._v(" "),a("h2",{attrs:{id:"daily-challenge-afternoon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-challenge-afternoon"}},[e._v("#")]),e._v(" Daily Challenge - Afternoon:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/IDMiller2020/week10-day1-RockPaperScissors",target:"_blank",rel:"noopener noreferrer"}},[e._v("C# Rock, Paper, Scissors"),a("OutboundLink")],1),e._v(" "),a("br"),e._v(" "),a("br")]),e._v(" "),a("h2",{attrs:{id:"daily-journal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal"}},[e._v("#")]),e._v(" Daily Journal:")]),e._v(" "),a("h2",{attrs:{id:"read-foundations-of-c-c-data-types-and-answer-the-following-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#read-foundations-of-c-c-data-types-and-answer-the-following-questions"}},[e._v("#")]),e._v(" Read "),a("a",{attrs:{href:"https://codeworksacademy.com/fs-student-guide/resources/wk10/01-CSharpGenerics/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Foundations of C# > C# Data Types"),a("OutboundLink")],1),e._v(" and answer the following questions:")]),e._v(" "),a("ol",[a("li",[e._v("What are the three categories of data types? How are they different? "),a("br"),e._v(" "),a("em",[e._v("Value type: directly contains a value in it's own memory space. "),a("br"),e._v("\nReference type: contains a pointer to the place in memory where the data is actually stored."),a("br"),e._v("\nPointer type: I don't completley understand the Pointer type. The assigned reading didn't seem to explain this type in as much detail as the other two types. From the example given for declaring a pointer it looks like maybe you can define a pointer for a type that would normally be a Value type, maybe?")]),e._v(" "),a("br"),e._v(" "),a("br")]),e._v(" "),a("li",[e._v("What are the Value-type data types? What differences do you notice from JavaScript? "),a("br"),e._v(" "),a("em",[e._v("Value-type data types directly contain values in it's own memory space. This seems similar to how a JavaScript variable would function if it was used within it's scope.")]),e._v(" "),a("br"),e._v(" "),a("br")]),e._v(" "),a("li",[e._v("In your own words how do Reference types get stored in memory? How does this differ from Value types? "),a("br"),e._v(" "),a("em",[e._v("Reference types create a pointer that points to a value somewhere else in memory. You can have multiple references pointing to the same value in memory and if the program assigns a new value using one of those references, all the references will now be pointing to the changed value.")]),e._v(" "),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);